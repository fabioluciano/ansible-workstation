- name: Skim | Check if is present
  stat:
    path: /usr/local/bin/sk
  register: sk_bin_path

- name: Skim | Check avaliable version
  command: /usr/local/bin/sk --version
  register: sk_bin_version
  ignore_errors: true

- name: Skim | Register local version
  set_fact:
    sk_local_version: "{{ sk_bin_version.stdout | regex_findall('(\\d+\\.\\d+\\.\\d+)') | first }}"
  when: sk_bin_version.rc == 0

- name: Skim | Register local version
  set_fact:
    sk_local_version: ""
  when: sk_bin_version.rc != 0

- name: Skim | Recover all releases
  uri:
    url: https://api.github.com/repos/lotabout/skim/releases
    return_content: true
    body_format: json
    headers:
      Authorization: "token {{ GH_TOKEN }}"
  retries: 3
  register: sk_releases_response

- name: Skim | Get latest version URL
  set_fact:
    sk_download_url: "{{ sk_releases_response.content | from_json | first | json_query('assets[?ends_with(name, `linux-gnu.tar.gz`)].browser_download_url') | first }}"

- name: Skim | Set latest remote version
  set_fact:
    sk_remote_version: "{{ sk_download_url | regex_findall('(\\d+\\.\\d+\\.\\d+)') | first }}"

- name: Skim | Install or Upgrade
  unarchive:
    src: "{{ sk_download_url }}"
    dest: /usr/local/bin
    remote_src: true
  become: true
  retries: 3
  when: sk_local_version != sk_remote_version or sk_bin_path.stat.exists == false
