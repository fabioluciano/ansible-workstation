---
- name: ShellCheck | Check if is present
  stat:
    path: /usr/local/bin/shellcheck
  register: shellcheck_bin_path

- name: ShellCheck | Check avaliable version
  command: /usr/local/bin/shellcheck --version
  register: shellcheck_bin_version
  ignore_errors: true

- name: ShellCheck | Register local version
  set_fact:
    shellcheck_local_version: "{{ shellcheck_bin_version.stdout | regex_findall('(\\d+\\.\\d+\\.\\d+)') | first }}"
  when: shellcheck_bin_version.rc == 0

- name: ShellCheck | Register local version
  set_fact:
    shellcheck_local_version: ""
  when: shellcheck_bin_version.rc != 0

- name: ShellCheck | Recover all releases
  uri:
    url: https://api.github.com/repos/koalaman/shellcheck/releases
    return_content: true
    body_format: json
    headers:
      Authorization: "token {{ GH_TOKEN }}"
  retries: 3
  register: shellcheck_releases_response

- name: ShellCheck | Get latest version URL
  set_fact:
    shellcheck_download_url: "{{ shellcheck_releases_response.content | from_json | first | json_query('assets[?starts_with(name, `shellcheck-`) && ends_with(name, `linux.x86_64.tar.xz`)].browser_download_url') | first }}"

- name: ShellCheck | Set latest remote version
  set_fact:
    shellcheck_remote_version: "{{ shellcheck_download_url | regex_findall('(\\d+\\.\\d+\\.\\d+)') | first }}"

- name: ShellCheck | Install deb file
  unarchive:
    remote_src: yes
    src: "{{ shellcheck_download_url }}"
    dest: /usr/local/bin
    extra_opts:
      - --strip-components=1
      - --wildcards
      - "shellcheck*/shellcheck"
  become: true
  retries: 3
  when: shellcheck_local_version != shellcheck_remote_version or shellcheck_bin_path.stat.exists == false
