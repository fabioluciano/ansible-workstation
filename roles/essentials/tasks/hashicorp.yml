---
- name: HashiCorp | Terraform | Install or Upgrade
  block:
  - name:  HashiCorp | Terraform | Verify the binary existence
    command: which terraform
    register: terraform_is_installed
    ignore_errors: yes
  - name: HashiCorp | Terraform | Check avaliable version
    command: terraform -v
    when: terraform_is_installed.rc == 0
    register: terraform_local_version
  - name: HashiCorp | Terraform | Request download page content
    uri:
      url: https://www.terraform.io/downloads.html
      return_content: yes
    register: terraform_download_page
  - name: HashiCorp | Terraform | Define latest avaliable version
    set_fact:
      terraform_download_url: "{{ terraform_download_page.content | regex_findall('(https:\/\/.*?terraform_[\\d.]+_linux_amd64.zip)') | first }}"
      terraform_latest_avaliable_version: "{{ terraform_download_page.content | regex_findall('terraform_([\\d.]+)_linux_amd64.zip') | first }}"
  - name: HashiCorp | Terraform | If installed, set the local version fact
    set_fact:
      terraform_local_version: "{{ terraform_local_version.stdout | regex_findall('Terraform v([\\d+.]+)') | first }}"
    when: terraform_is_installed.rc == 0 and terraform_local_version.rc == 0
  - name: HashiCorp | Terraform | Ensure that the binary is avaliable on /usr/local/bin directory
    unarchive:
      src: "{{ terraform_download_url }}"
      dest: /usr/local/bin/
      remote_src: true
    become: yes
    when: terraform_latest_avaliable_version != terraform_local_version
  tags:
    - hashicorp
    - terraform

- name: HashiCorp | Packer | Install or Upgrade
  block:
  - name: HashiCorp | Packer | Verify the existence of binary
    command: which packer
    register: packer_is_installed
    ignore_errors: yes
  - name: HashiCorp | Packer | Check avaliable version
    command: packer -v
    when: packer_is_installed.rc == 0
    register: packer_local_version
  - name: HashiCorp | Packer | Request download page content
    uri:
      url: https://www.packer.io/downloads.html
      return_content: yes
    register: packer_download_page
  - name: HashiCorp | Packer | Define latest avaliable version fact
    set_fact:
      packer_download_url: "{{ packer_download_page.content | regex_findall('(https:\/\/.*?packer_[\\d.]+_linux_amd64.zip)') | first }}"
      packer_latest_avaliable_version: "{{ packer_download_page.content | regex_findall('packer_([\\d.]+)_linux_amd64.zip') | first }}"
  - name: HashiCorp | Packer | If installed, set the local version fact
    set_fact:
      packer_local_version: "{{ packer_local_version.stdout | regex_findall('([\\d+.]+)') | first }}"
    when: packer_is_installed.rc == 0 and packer_local_version.rc == 0
  - name: HashiCorp | Packer | Ensure that the binary is avaliable on /usr/local/bin directory
    unarchive:
      src: "{{ packer_download_url }}"
      dest: /usr/local/bin/
      remote_src: true
    become: yes
    when: packer_latest_avaliable_version != packer_local_version
  tags:
    - hashicorp
    - packer

- name: HashiCorp | Vagrant | Install or Upgrade
  block:
  - name: HashiCorp | Vagrant | Verify the existence of binary
    command: which vagrant
    register: vagrant_is_installed
    ignore_errors: yes
  - name: HashiCorp | Vagrant | Check avaliable version
    command: vagrant -v
    when: vagrant_is_installed.rc == 0
    register: vagrant_local_version
  - name: HashiCorp | Vagrant | Request download page content
    uri:
      url: https://www.vagrantup.com/downloads.html
      return_content: yes
    register: vagrant_download_page
  - name: HashiCorp | Vagrant | Define latest avaliable version fact
    set_fact:
      vagrant_download_url: "{{ vagrant_download_page.content | regex_findall('(https:\/\/.*?vagrant_[\\d.]+_linux_amd64.zip)') | first }}"
      vagrant_latest_avaliable_version: "{{ vagrant_download_page.content | regex_findall('vagrant_([\\d.]+)_linux_amd64.zip') | first }}"
  - name: HashiCorp | Vagrant | If installed, set the local version fact
    set_fact:
      vagrant_local_version: "{{ vagrant_local_version.stdout | regex_findall('([\\d+.]+)') | first }}"
    when: vagrant_is_installed.rc == 0 and vagrant_local_version.rc == 0
  - name: HashiCorp | Vagrant | Ensure that the binary is avaliable on /usr/local/bin directory
    unarchive:
      src: "{{ vagrant_download_url }}"
      dest: /usr/local/bin/
      remote_src: true
    become: yes
    when: vagrant_latest_avaliable_version != vagrant_local_version
  tags:
    - hashicorp
    - vagrant